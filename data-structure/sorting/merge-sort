class Demo {
	public static void merge(int[] l, int[] r, int[] a) {
		int nl = l.length;
		int nr = r.length;
		int i = 0, j = 0, k = 0;
		while (i < nl && j < nr) {
			if (l[i] <= r[j]) {
				a[k] = l[i];
				i++;
			} else {
				a[k] = r[j];
				j++;
			}
			k++;
		}
		while (i < nl) {
			a[k] = l[i];
			i++;
			k++;
		}
		while (j < nr) {
			a[k] = r[j];
			j++;
			k++;
		}
	}

	public static void mergeSort(int A[]) {
		int n = A.length;
		if (n < 2)
			return;
		int mid = n / 2;
		int[] left = new int[mid];
		int[] right = new int[n - mid];
		for (int i = 0; i < mid; i++) {
			left[i] = A[i];
		}
		for (int i = mid; i < n; i++) {
			right[i - mid] = A[i];
		}
		mergeSort(left);
		mergeSort(right);
		merge(left, right, A);

	}

	public static void main(String[] args) {
		int A[] = { 2, 7, 4, 1, 5, 3 };
		mergeSort(A);
		System.out.println("Sorted Array");
		for (int x : A) {
			System.out.print(x + " ");
		}

	}
}
